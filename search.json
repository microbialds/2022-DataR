[
  {
    "objectID": "clases/index.html",
    "href": "clases/index.html",
    "title": "Preparandonos para el curso",
    "section": "",
    "text": "En este curso vamos a utilizar principalmente R y RStudio para nuestras clases. Si ya lo tienen instalado, mi recomendación es que actualicen a la última versión de RStudio, ya que además viene con Quarto (la otra herramientas que vamos a utilizar).\nNota para usuarios de MacOS\nAntes de instalar R, la recomendación es instalar primero Xcode y XQuartz.\n\n\nR se puede descargar desde la pagina del Comprehensive R Archive Network o CRAN. Desde ese lugar se puede descargar la version de R e instalar según su sistema operativo.\n\n\n\nEn la página de descarga de RStudio, elegir la versión según el sistema operativo que esten utilizando.\n\n\nTanto R como RStudio tiene paginas web en donde se pueden encontrar respuestas a algunas preguntas. En el caso de R estan “Frequently Asked Questions”(FAQ) de R, o para Windows R for Windows FAQ.\nOtra fuente de información son paginas web y foros como Stack Overflow RStudio community. Sin embargo, lo más probable es que tus dudas ya se encuentren resueltas en la web, asi que primero haz una búsqueda en Google usando palabras clave o copia y pega en el buscador el mensaje de error que te aparezca en la consola de R. Consejo: haz tus búsquedas y consultas en inglés, tendrás acceso a más y mejor información."
  },
  {
    "objectID": "clases/01-intro.html",
    "href": "clases/01-intro.html",
    "title": "Introducción a R",
    "section": "",
    "text": "En esta primera clase, vamos a explorar brevemente el lenguaje de programación R, conocer algunas de sus características y generar una visualización a partir de una tabla!"
  },
  {
    "objectID": "clases/01-intro.html#ejecutando-comandos-en-r",
    "href": "clases/01-intro.html#ejecutando-comandos-en-r",
    "title": "Introducción a R",
    "section": "Ejecutando comandos en R",
    "text": "Ejecutando comandos en R\nDesde la consola, es posible ejecutar comandos directamente. Por ejemplo podemos hacer operaciones aritmeticas\n\n1 + 1\n\n[1] 2\n\n\nTambien podemos generar números de manera secuencial\n\n1:10\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\nTodo esto lo estuvimos haciendo desde la consola, pero no es la manera mas habitual de trabajar, ni tampoco la mejor práctica. Lo ideal es trabajar todo desde un script (básicamente un archivo de texto), el cual nos permite documentar el trabajo realizado.\nPara crear un nuevo script, podemos ir al boton verde de la parte superior izquierda, y elegir la opción R script. Una vez que creamos un script, podemos ir dejando en ese documento los comandos que vamos a ir utilizando."
  },
  {
    "objectID": "clases/01-intro.html#elementos-básicos-en-r",
    "href": "clases/01-intro.html#elementos-básicos-en-r",
    "title": "Introducción a R",
    "section": "Elementos básicos en R",
    "text": "Elementos básicos en R\nEn R encontramos 4 tipos de datos atómicos con los cuales podemos crear vectores:\n\nnumérico: enteros y reales\n12\n12.5\ncaracteres\n\"hola, soy un texto!\"\nlógicos\nTRUE\nFALSE\ncomplejos\n1 + 3i\n\nTambién existen dos tipos especiales que se pueden mezclar con los anteriores, NULL para cuando no existe un valor (por ejemplo, para declarar una variable sin asignar un valor) y NA (not assigned) cuando no hay una observación en una tabla.\nEl uso de NA es importante, porque permite mezclarse con otros tipos. Cualquier calculo que involucre NA va a resultar en NA. Por ejemplo:\n\nNA + 1\n\n[1] NA\n\n\nEl resultado es NA, porque R no sabe cual es la respuesta. Esto es igual si queremos identificar el número máximo en una lista de números:\n\nmax(10, 30, 5, NA)\n\n[1] NA\n\n\nPero algunas funciones, pueden ignorar ese NA con el parametro adecuado. Por ejemplo:\n\nmax(10, 30, 5, NA, na.rm=TRUE)\n\n[1] 30"
  },
  {
    "objectID": "clases/01-intro.html#asignación-de-variables",
    "href": "clases/01-intro.html#asignación-de-variables",
    "title": "Introducción a R",
    "section": "Asignación de variables",
    "text": "Asignación de variables\nLos resultados de las operaciones, calculos, etc, pueden ser guardados en variables para ser utilizados. Esto se hace con el operador <-. También es posible utilizar el operado =, pero en general se utiliza <-. Por ejemplo:\n\nejemplo <- 120\n\nY ahora podemos llamar la variable\n\nejemplo\n\n[1] 120\n\n\nEs posible hacer operaciones directamente con las variables:\n\nx <- 100\ny <- 123\n\nx + y\n\n[1] 223"
  },
  {
    "objectID": "clases/01-intro.html#vectores",
    "href": "clases/01-intro.html#vectores",
    "title": "Introducción a R",
    "section": "Vectores",
    "text": "Vectores\nUn vector es una coleccion ordenada de elementos, que pueden ser del mismo tipo o combinados. La función que se utiliza para generar los vectores es c. Por ejemplo:\n\nx <- c(1,5,10,14,20)\nx\n\n[1]  1  5 10 14 20\n\n\nTambién es posible crear un vector de caracteres\n\nnombres <- c(\"Francisco\", \"Andres\", \"Jorge\")\nnombres\n\n[1] \"Francisco\" \"Andres\"    \"Jorge\"    \n\n\ny combinar diferentes tipos:\n\ncombinacion <- c(\"Andres\", 50, 1e10)\ncombinacion\n\n[1] \"Andres\" \"50\"     \"1e+10\" \n\n\nPodemos acceder a los elementos individuales de un vector usando [] y el número del elemento. Es importante recordar que la númeracion parte desde 1 (versus Python, que parte desde 0).\n\nnombres[1]\n\n[1] \"Francisco\"\n\nnombres[3]\n\n[1] \"Jorge\"\n\n\nTambien podemos asignar nombres a los elementos de un vector. Por ejemplo:\n\nnumeros <- c(1,2,3)\nlabel <- c(\"uno\", \"dos\", \"tres\")\n\nnames(numeros) <- label\n\nnumeros\n\n uno  dos tres \n   1    2    3 \n\n\nY podemos acceder por nombre:\n\nnumeros[\"uno\"]\n\nuno \n  1 \n\n\nincluso usando un vector\n\nnumeros[c(\"uno\", \"tres\")]\n\n uno tres \n   1    3"
  },
  {
    "objectID": "clases/01-intro.html#lecturas-recomendadas",
    "href": "clases/01-intro.html#lecturas-recomendadas",
    "title": "Introducción a R",
    "section": "Lecturas recomendadas",
    "text": "Lecturas recomendadas\n\nBest practices for Writing R Code: link"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Temas que veremos en este curso:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataViz 2022",
    "section": "",
    "text": "Bienvenid@s al curso de análisis y visualización de datos usando R, Tidyverse y Quarto.\nEn la parte superior derecha de esta página encontraran el link al material de las clases y las tareas que iremos trabajando cada semana.\nOJO Antes de nuestra primera clase el próximo Martes 16, es necesario que traigan instalado en sus computadores R, Rstudio y las librerias que vamos a utilizar. Mas información la pueden encontrar aqui, en la sección de pre-requisitos.\n\nProfesor\n\n   Juan A. Ugalde\n   juan.ugalde@unab.cl\n\n\n\nDetalles del curso\n\n   Martes, 9:25 am - 11:05 am\n   Sala de seminarios CBIB"
  }
]