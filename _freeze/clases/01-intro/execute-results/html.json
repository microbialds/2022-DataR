{
  "hash": "62d55d98e6b32458ec5f96e75fd18db8",
  "result": {
    "markdown": "---\ntitle: \"Introducción a R\"\n---\n\n\nEn esta primera clase, vamos a explorar brevemente el lenguaje de programación `R`, conocer algunas de sus características y generar una visualización a partir de una tabla! \n\n## Ejecutando comandos en R\n\nDesde la consola, es posible ejecutar comandos directamente. Por ejemplo podemos hacer operaciones aritmeticas\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\nTambien podemos generar números de manera secuencial\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1:10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n:::\n\n\nTodo esto lo estuvimos haciendo desde la consola, pero no es la manera mas habitual de trabajar, ni tampoco la mejor práctica. Lo ideal es trabajar todo desde un script (básicamente un archivo de texto), el cual nos permite documentar el trabajo realizado.\n\nPara crear un nuevo script, podemos ir al boton verde de la parte superior izquierda, y elegir la opción `R script`. Una vez que creamos un script, podemos ir dejando en ese documento los comandos que vamos a ir utilizando.\n\n## Elementos básicos en R\n\nEn R encontramos 4 tipos de datos atómicos con los cuales podemos crear vectores:\n\n- numérico: enteros y reales\n\n    ```\n    12\n    12.5\n    ```\n- caracteres\n\n    ```\n    \"hola, soy un texto!\"\n    ```\n- lógicos\n\n    ```\n    TRUE\n    FALSE\n    ```\n- complejos\n\n    ```\n    1 + 3i\n    ```\n    \nTambién existen dos tipos especiales que se pueden mezclar con los anteriores, `NULL` para cuando no existe un valor (por ejemplo, para declarar una variable sin asignar un valor) y `NA` (not assigned) cuando no hay una observación en una tabla.\n\n\n\n\n\n\n## Lecturas recomendadas\n\n1. Best practices for Writing R Code: [link](https://swcarpentry.github.io/r-novice-inflammation/06-best-practices-R/)",
    "supporting": [
      "01-intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}